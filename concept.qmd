# Course concept

All course content is managed in github. On changes locally the complete content is updated.

Chapter 1. What is the technology behind this course.

![images/workflow.png](images/workflow.png)
Figure 1: Course writing workflow, starting from plain text (narrative, code and data) all under version control for reproducibility. 

## Content
- simple lectures about pharmacokinetics
- short videos
- slides
- simple apps for exploration
- interactive notebook for exploration
- quizzes
- AI tutor

## Form/Technology

1. Lecture scripts
This is the complete reference information to learn; minimal interactivity; supports studying the
content.
- Jupyter notebooks + markdown => cross compilation to 
    - [x] HTML (Blog/Webpage) -> hosted on github.io
    - [x] PDF (handout/book, typst) -> hosted on github.io for download
    - [ ] Presentation (reveal.js) -> hosted on Github.io; necessary to render to a different target;
          see <https://github.com/quarto-dev/quarto-cli/discussions/1433>; see <https://github.com/quarto-dev/quarto-cli/issues/2200>.
          By using different profiles these information can be combined.

2. Short presentations
    - [~] currently the presentations are in google slides; motivational content; short; 5-15 min
    - [ ] videos of the presentations;

3. OpenEdx course: markdown -> OLX (mu), to openedx course format
  
- figure out how to customize compilation to different targets in Quarto; I.e. special behavior for book vs. slides.

## Different classes
- teaching notebooks => rendered to content
- exercise notebooks
- solution notebooks/material


## Version control
- Course content is managed in a GitHub repository (version control)

## Continous integration and deployment
- CI via GitHub actions is used to automatically build and deploy the course content.

## Software and tools
- quatro for conversion; 
- openedx (docker container)

## AI support for writing text
- All text creation is supported by ChatGPT.

## Corporate Styling for the course
- use consistent colorschema and logos 

## Hosting
- OpenEDX is hosted using the de.NBI cloud (or HU resourses) via OpenStack

---

## Notebook and markdown based publishing tools
### Quarto
- An open-source scientific and technical publishing system
- https://quarto.org/
- Publish reproducible, production quality articles, presentations, dashboards, websites, blogs, and books in HTML, PDF, MS Word, ePub, and more.
- see: https://gael-close.github.io/posts/2209-tech-writing/2209-tech-writing.html

#### Interactivity
- https://quarto.org/docs/interactive/
- Create custom JavaScript visualizations using Observable JS: https://quarto.org/docs/interactive/ojs/
- Incorporate Jupyter Widgets: https://ipywidgets.readthedocs.io/en/latest/
- Shiny for Python integration: https://quarto.org/docs/dashboards/interactivity/shiny-python/index.html; https://quarto.org/docs/dashboards/interactivity/shiny-python/index.html

### jupyterbook
- https://jupyterbook.org/en/stable/intro.html
- Build beautiful, publication-quality books and documents from computational content.
- Similar goal as quarto, but more focused on books.

---

## Presentations
### reveal.js
- reveal.js is an open source HTML presentation framework. It's a tool that enables anyone with a web browser to create fully-featured and beautiful presentations for free.
- Presentations made with reveal.js are built on open web technologies. That means anything you can do on the web, you can do in your presentation. Change styles with CSS, include an external web page using an `iframe` or add your own custom behavior using our JavaScript API.
- The framework comes with a broad range of features including nested slides, Markdown support, Auto-Animate, PDF export, speaker notes, LaTeX support and syntax highlighted code.
- https://revealjs.com/course/
- nice integration with Quarto; https://quarto.org/docs/presentations/revealjs/demo/#/title-slide
- https://github.com/quarto-dev/quarto-web/blob/main/docs/presentations/revealjs/demo/index.qmd

---

## Interactive plots
### plotly
- https://plotly.com/python/
### altair
- https://altair-viz.github.io/

---

## Interactive webapps
### Shiny for python 
- possible integration with Quarto

### Voila
- voila notebooks: https://voila.readthedocs.io/en/stable/
- Voilà allows you to convert a Jupyter Notebook into an interactive dashboard that allows you to share your work with others. It is secure and customizable, giving you control over what your readers experience.

### Streamlit
- https://streamlit.io/
- Turn your data scripts into shareable web apps in minutes. All in pure Python. No front‑end experience required.

### Dash
- Developed by Plotly, Dash is ideal for creating complex, interactive web applications using Python.
- Supports multi-page apps and scales well for large datasets and multiple users.
- Requires knowledge of HTML, CSS, and JavaScript for advanced customization

### Panel
- https://panel.holoviz.org/
- Panel is an open-source Python library designed to streamline the development of robust tools, dashboards, and complex applications entirely within Python. 

### Framework
- https://github.com/observablehq/framework
- Observable Framework is a free, open-source, static site generator for data apps, dashboards, reports, and more. Framework combines JavaScript on the front-end for interactive graphics with any language on the back-end for data analysis. Framework features data loaders that precompute static snapshots of data at build time for dashboards that load instantly.

---

## Deployment of notebooks

### binderhub
- very slow
- https://binderhub.readthedocs.io/en/latest/
- 
### jupyterhub
- JupyterHub brings the power of notebooks to groups of users. It gives users access to computational environments and resources without burdening the users with installation and maintenance tasks. Users - including students, researchers, and data scientists - can get their work done in their own workspaces on shared resources which can be managed efficiently by system administrators.
- https://jupyter.org/hub
- https://tljh.jupyter.org/en/latest/howto/index.html 

https://education.github.com/globalcampus/teacher?email_referrer=true 

nbgrader: https://nbgrader.readthedocs.io/en/stable/ 
https://www.youtube.com/watch?v=bEcxnR2V-_8 
Otter grader & gradescope

---

# OpenEdx
- https://openedx.org/
- Enable online campuses, instructor-led courses, degree programs, and self-paced courses using a single platform.

## OpenEdx Deployment
- deployment with tutor: https://docs.tutor.edly.io/index.html

## H5P
- Play H5P content in Open edX using h5pxblock
- https://github.com/edly-io/h5pxblock

## OpenEdx Notebook Integration
- openedx notebook integration: https://github.com/parmentelat/nbhosting ?!
- https://github.com/overhangio/jupyter-xblock 
JupyterHub hosts Jupyter instances with authentication (e.g. OAuth; IDK about using edX users as JupyterHub users with individual Docker image instance containers with nbgrader/xblock)
The new jupyter-viewer-xblock (https://github.com/ibleducation/jupyter-viewer-xblock) allows to embed notebooks dynamically from a public URL.
Demo here! https://www.youtube.com/watch?v=K8jhWgQnxvI
- https://github.com/overhangio/tutor-jupyter; This is a plugin for Tutor that makes it easy to integrate Jupyter notebooks in Open edX. It achieves the following: 1. Install the official jupyter-xblock in the Open edX LMS and Studio. 2. Run a Docker-based JupyterHub instance with a Docker spawner.

---

# GitHub Global Campus
Focus on teaching with GitHub Classroom
Managing and organizing your class is easy with GitHub Classroom. Track and manage assignments, automate grading, and help students when they get stuck— all while using GitHub. 


# Education: Course structure and best practise
## Teaching and Learning with Jupyter
This handbook is for any educator teaching a topic that includes data analysis or computation in order to support learning.
- https://jupyter4edu.github.io/jupyter-edu-book/

## Open edX Educators
- Material on how to build and design courses: https://docs.openedx.org/en/latest/educators/index.html
- Instructional Design Concepts: https://docs.openedx.org/en/latest/educators/navigation/creating_course.html#instructional-design-concepts

---

## Text to speech
### Whisper AI
- https://openai.com/index/whisper/

### ElevenLabs
- https://elevenlabs.io/

## Quatro document creation

One can update the notebooks in their favourite environment, e.g. jupyterlab
```bash
jupyter lab notebooks/hello.ipynb
```
The content can be rendered to the respective output format using the `render` command.
```bash
quarto render notebooks/hello.ipynb --to html
quarto render notebooks/hello.ipynb --to pdf
quarto render notebooks/hello.ipynb --to revealjs
quarto render notebooks/hello.ipynb --to pptx
```

To execute the notebooks use the `execute` flag
```bash
quarto frender notebook.ipynb --execute
```

To preview the HTML use the `preview` command.
```bash
quarto preview notebooks/hello.ipynb
```